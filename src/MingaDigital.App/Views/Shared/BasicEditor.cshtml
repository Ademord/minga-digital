@using System.Reflection
@using System.ComponentModel.DataAnnotations

@{
    var model = (Object)Model;
    var modelType = model.GetType();
    
    var displayProps =
      from prop in modelType.GetProperties()
      let disp = prop.GetCustomAttribute<DisplayAttribute>()
      where disp != null
      select prop;
}

<div class="entity-editor">
  <h2 class="page-header">
    @ViewBag.Title
  </h2>
  
  <form method="POST">
  @if (!ViewContext.ViewData.ModelState.IsValid)
  {
    <div class="bg-danger error-list">
      <h4 class="title">Error</h4>
      @Html.ValidationSummary("")
    </div>
  }
    
  @foreach (var prop in displayProps)
  {
    var isInvalid = ViewContext.ViewData.ModelState[prop.Name]?.Errors.Any();
    var classes = "";
    
    if (isInvalid == true) { classes += " has-error"; }
    
    <div class="form-group @classes">
      @Html.Label(prop.Name, null, new { @class = "control-label" })
      
      @Html.Editor(prop.Name)
    </div>
  }
    
    <div class="text-right">
      <a href="@Url.Action("Index")" class="btn btn-link">Cancelar</a>
      
      <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
  </form>
</div>